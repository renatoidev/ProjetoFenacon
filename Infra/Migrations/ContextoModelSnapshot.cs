// <auto-generated />
using System;
using Infra.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fenacon.Dominio.Ferias", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataFim")
                        .HasColumnName("DataFim")
                        .HasColumnType("dateTime");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnName("DataInicio")
                        .HasColumnType("dateTime");

                    b.Property<DateTime>("PeriodoAquisitivo")
                        .HasColumnName("PeriodoAquisitivo")
                        .HasColumnType("dateTime");

                    b.HasKey("Id");

                    b.ToTable("Ferias");
                });

            modelBuilder.Entity("Fenacon.Dominio.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("CargaHoraria")
                        .HasColumnName("CargaHoraria")
                        .HasColumnType("time");

                    b.Property<int>("Cargo")
                        .HasColumnName("CargoFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("CpfFuncionario")
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnName("DataAdmissao")
                        .HasColumnType("dateTime");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("EnderecoFuncionario")
                        .HasColumnType("varchar(60)");

                    b.Property<Guid>("IdFerias")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSupervisor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NomeFuncionario")
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Situacao")
                        .HasColumnName("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFerias");

                    b.HasIndex("IdSupervisor");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Fenacon.Dominio.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Supervisores");
                });

            modelBuilder.Entity("Fenacon.Dominio.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfirmaSenha")
                        .IsRequired()
                        .HasColumnName("ConfirmaSenha")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NomeUsuario")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Fenacon.Dominio.Funcionario", b =>
                {
                    b.HasOne("Fenacon.Dominio.Ferias", "Ferias")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdFerias")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fenacon.Dominio.Supervisor", "Supervisor")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdSupervisor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
